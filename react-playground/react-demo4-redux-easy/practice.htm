<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script src="https://unpkg.com/redux@latest/dist/redux.min.js"></script>

</head>

<body>
    <div>
        <p>
            Clicked: <span id="value">0</span> times
            <button id="increment">+</button>
            <button id="decrement">-</button>
            <button id="incrementIfOdd">Increment if odd</button>
            <button id="incrementAsync">Increment async</button>
        </p>
    </div>
</body>
<script>
    const initialState = {
        value: 0
    }
    function counterReducer(state = initialState, action) {
        switch (action.type) {
            case "counter/incremented":
                return { ...state, value: state.value + 1 };
            case "counter/decremented":
                return { ...state, value: state.value - 1 };
            default:
                return state
        }
    }

    const store = Redux.createStore(counterReducer)
    const valueEl = document.getElementById("value");
    function render() {
        console.log(111, store, store.getState('value'))
        const state = store.getState();
        valueEl.innerHTML = state.value.toString();

    }

    store.subscribe(render)
    document
        .getElementById("increment")
        .addEventListener("click", function () {
            store.dispatch({ type: "counter/incremented" });
        });

    document
        .getElementById("decrement")
        .addEventListener("click", function () {
            store.dispatch({ type: "counter/decremented" });
        });

    document
        .getElementById("incrementIfOdd")
        .addEventListener("click", function () {
            // We can write logic to decide what to do based on the state
            if (store.getState().value % 2 !== 0) {
                store.dispatch({ type: "counter/incremented" });
            }
        });

    document
        .getElementById("incrementAsync")
        .addEventListener("click", function () {
            // We can also write async logic that interacts with the store
            setTimeout(function () {
                store.dispatch({ type: "counter/incremented" });
            }, 1000);
        });

</script>

</html>